

<% if logged_in?%>

    <div class="container sr-root">
        <p id="error" class="alert alert-danger"> </p>
        <p id="success" class="alert alert-success">  </p>
        <%= link_to "View Your Orders", orders_path(@order.id), :id => "order"%>
        <form id="payment-form">

            <%= hidden_field_tag :amount, @total*100%>
            <%= hidden_field_tag :currency, "usd"%>
            <%= hidden_field_tag :user_id, current_user.id%>

            <div class= 'row margin-top'>
                <div class= "col-md-3 offset-md-3">
                    <strong> Shipping Address </strong>
                </div>
                <div class="col-4">
                    <%= collection_select(:order, :shipping_address_id, @addresses.order(:address_line_1), :id, :address_line_1, {}, {class: "form-control"})%>
                    <br> <br>
                    <%= link_to "Add New Address", new_address_path%>
                </div>
            </div>

            <hr>
            
            <div class= 'row'>
                <div class= "col-md-3 offset-md-3">
                    <strong> Payment Method </strong>
                    <br> <br>
                    <div class="padding-sides gray-border"id="card-element">
                        <!-- Elements will create input elements here -->
                    </div>

                    <!-- We'll put the error messages in this element -->
                    <div id="card-errors" role="alert"></div>

                </div>
                <div class="col-4">
                    <strong> Billing Address </strong>
                    <br> <br>
                    <%= collection_select(:order, :billing_address_id, @addresses.order(:address_line_1), :id, :address_line_1, {}, {class: "form-control"})%>
                    <br> <br>
                    <%= link_to "Add New Address", new_address_path%>
                    <br> <br>
                </div>
            </div>

            <hr>

            <div class= 'row'>
                <div class= "col-md-7 offset-md-3">
                    <strong> Review your order </strong>
                    <br> <br>
                    <div class="gray-border">
                        <br>
                        <div class="container">
                            <% @cards.each do |card| %>
                                <div class="row h-100 ">
                                    <div class="col-3">
                                        <img class="responsive" src= <%= asset_path(card.img) %> height=250px width=150px/>
                                    </div>
                                    <div class="col-3 my-auto">
                                        <%= card.short_description %>
                                    </div>
                                    <div class="col-3 my-auto">
                                        <%= link_to [get_selection(current_cart, card)], method: :delete do %>
                                            <i class="fas fa-minus"></i>
                                        <% end %>
                                        &nbsp;
                                        <%= @sizes[card.id] %> 
                                        &nbsp;
                                        <%= link_to selections_path(selection: {shopping_cart_id: current_cart.id, card_id: card.id}), method: :post, params: {selection: {shopping_cart_id: current_cart.id, card_id: card.id}} do %> 
                                            <i class="fas fa-plus"></i>
                                        <% end %>
                                    </div>
                                    <div class="col-3 my-auto">
                                        $<%= @sizes[card.id] * 5 %>
                                    </div>
                                </div>
                            <% end %>
                        </div>
                    </div>
                </div>
            </div>

            <br> <br>

            <div class="row margin-bottom">
                <div class="col-md-7 offset-md-3">

                    <div class="container gray-border padding-sides">
                        <div class="row">
                            <div class="col-3 offset-md-1 my-auto">
 
                                <%= button_tag(type: "submit", class: "btn btn-primary", id: "submit") do %>
                                    <span id="button-text"> Checkout </span>
                                    <div class="spinner hidden" id="spinner"></div>
                                <% end %>
                            </div>
                            <div class="col-7 my-auto">
                                <h4> <strong> Total: $<%= @total%> </strong> </h4>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </form>
    </div>

<% else %>

    implement this later

<% end %>


<script src="https://js.stripe.com/v3/"></script>
<script>


    // Show a spinner on payment submission
    var changeLoadingState = function(isLoading) {
        if (isLoading) {
            console.log('spinner time')
            
            document.getElementById("submit").disabled = true;
            document.querySelector("#spinner").classList.remove("hidden");
            document.querySelector("#button-text").classList.add("hidden");
        } else {
            document.getElementById("submit").disabled = false;
            document.querySelector("#spinner").classList.add("hidden");
            document.querySelector("#button-text").classList.remove("hidden");
        }
    };

    document.getElementById("error").style.display = "none";
    document.getElementById("success").style.display = "none";
    document.getElementById("order").style.display = "none";
    // Set your publishable key: remember to change this to your live publishable key in production
    // See your keys here: https://dashboard.stripe.com/account/apikeys
    //Test Key
    var stripe = Stripe("pk_test_51GroxnGYhSS9s9rvN6vCJC23mTemFWoKTIXA0ztQ1QJswzi29Qf95PFb9nG6AKjwijEKb4fqvL2MkPeOoCn2s5zY00RAV6TboP");
    
    
    //Production Key
    // var stripe = Stripe("pk_live_An2lYRL5Bo4aXbcfUl5yK5G000MWuRBNZ7");
    
    var elements = stripe.elements();

    // Set up Stripe.js and Elements to use in checkout form
    var style = {
        base: {
            color: "#32325d",
        }
    };

    var card = elements.create("card", { style: style });
    console.dir(card)
    card.mount("#card-element");


    card.on('change', ({error}) => {
    const displayError = document.getElementById('card-errors');
        if (error) {
            displayError.textContent = error.message;
        } else {
            displayError.textContent = '';
        }
    });

    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(ev) {
        ev.preventDefault()
        changeLoadingState(true);
        console.log("submitted")
        data = new FormData
        data.append("order[amount]", $("#amount").val())
        data.append("order[currency]", $("#currency").val())
        data.append("order[user_id]", $("#user_id").val())
        data.append("order[shipping_address_id]", $("#order_shipping_address_id").val())
        data.append("order[billing_address_id]", $("#order_billing_address_id").val())

        Rails.ajax({
            url: "/secret",
            type: 'POST',
            data: data,
            success: function(responseJson) {

                var clientSecret = responseJson.client_secret;
                stripe.confirmCardPayment(clientSecret, {
                        payment_method: {
                        card: card,
                        billing_details: {
                            name: responseJson.name,
                            email: responseJson.email,
                            address: {city: responseJson.billing_address.city,
                                      country: responseJson.billing_address.country,
                                      line1: responseJson.billing_address.line1,
                                      line2: responseJson.billing_address.line2,
                                      postal_code: responseJson.billing_address.postal_code,
                                      state: responseJson.billing_address.state}
                        }
                    }
                }).then(function(result) {
                    if (result.error) {
                        // Show error to your customer (e.g., insufficient funds)
                        console.log(result.error.message);
                        document.getElementById("error").innerText = result.error.message;
                        document.getElementById("success").style.display = "none";
                        document.getElementById("error").style.display = "block";
                        changeLoadingState(false);
                    } else {
                        if (result.paymentIntent.status === 'succeeded') {
                            console.log('payment succeeded!')
                            setTimeout(() => {  document.getElementById("success").innerText = "Payment Succeeded! Your Order is Now Being Proccessed";
                            document.getElementById("error").style.display = "none";
                            document.getElementById("success").style.display = "block";
                            document.getElementById("order").style.display = "block";
                            changeLoadingState(false); }, 4000);
                            
                        } else {
                            document.getElementById("error").innerText = "An Unknown Error Has Occured";
                            document.getElementById("error").style.display = "block";
                            document.getElementById("success").style.display = "none";
                            changeLoadingState(false);
                        }
                    }
                    
                });
            }
        })
    });
</script>